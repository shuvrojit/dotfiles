# reference https://git.sr.ht/~pvsr/dotfiles/commit/f79b9e43d0f49555167709b5cf4b154b19dcc154
# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

set $black        #282828
set $darkred      #cc241d
set $darkgreen    #98971a
set $darkyellow   #d79921
set $darkblue     #458588
set $darkmagenta  #b16286
set $darkcyan     #689d6a
set $lightgray    #a89984
set $darkgray     #928374
set $red          #fb4934
set $green        #b8bb26
set $yellow       #fabd2f
set $blue         #83a598
set $magenta      #d3869b
set $cyan         #8ec07c
set $white        #ebdbb2


Xwayland enable
# for pywal
include "$HOME/.cache/wal/colors-sway"

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty

set $border normal 1

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /home/shuv40/Desktop/pictures/wal1.jpg
# for pywal
output * background $wallpaper fill
client.focused $color0 $background $foreground $color7 $background

default_border pixel $border 
default_floating_border pixel $border
gaps inner 2
gaps outer 3
smart_gaps off


output HDMI-A-1 resolution 1366x768 position 1366,0

# custom

# will start with floating window
for_window [class="(?i)mpv"] floating enable
for_window [class="(?i)sxiv"] floating enable

for_window [class="Firefox"] border pixel 0
for_window [class="alacritty"] border pixel 2
#for_window [class="transmission"] border pixel 0
#for_window [class="qutebrowser"] border pixel 0
for_window [title="Google Chrome"] border pixel 0
for_window [class="google-chrome"] border pixel 0

hide_edge_borders smart

bindsym $mod+Shift+z move container to workspace back_and_forth

# class                 border      backgr.     text    indicator child_border
client.focused          $cyan      $cyan      $black  $black    $cyan
client.focused_inactive $darkblue  $darkblue  $black  $black    $darkblue
client.unfocused        $black      $black      $white  $black    $black
client.urgent           $black      $black      $white  $black    $black
client.placeholder      $black      $black      $white  $black    $black
client.background       $black

# set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
# mode "$mode_system" {
#     bindsym l exec --no-startup-id swaylock, mode "default"
#     bindsym e exec --no-startup-id swaymsg exit, mode "default"
#     bindsym s exec --no-startup-id swaylock -f && systemctl suspend, mode "default"
#     bindsym h exec --no-startup-id swaylock -f && systemctl hibernate, mode "default"
#     bindsym r exec --no-startup-id systemctl reboot -i, mode "default"
#     bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

#     bindsym Return mode "default"
#     bindsym Escape mode "default"
#     bindsym Control+bracketleft mode "default"
# }
# bindsym $mod+q mode "$mode_system"

# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
 exec swayidle -w \
          timeout 300 'swaylock -f -c 000000' \
          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep 'swaylock -f -c 000000'


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+tab workspace back_and_forth
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
# bindsym $mod+p exec grim screenshot.png

bindsym $mod+p exec cd ~/Desktop/screenshots && grim "$(date +"%Y_%m_%d_%I_%M_%p_%S").png" && popd
bindsym $mod+Shift+p exec cd ~/Desktop/screenshots && grim -g "$(slurp)" "$(date +"%Y_%m_%d_%I_%M_%p_%S").png" && popd

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }


# PERSONAL CONFIG

input type:touchpad {
    tap enabled
    natural_scroll disabled
}

# set brightness logarithmically by factor 1.4
# # .72 is just slightly bigger than 1 / 1.4
# bindsym --locked XF86MonBrightnessUp exec sudo light -A 10
# bindsym --locked XF86MonBrightnessDown exec sudo light -U 10
# bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
# bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
# bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
# bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

exec_always gammastep -l 23:89

set $nag exec swaynagmode
mode "nag" {
  bindsym {
    Ctrl+d    mode "default"

    Ctrl+c    $nag --exit
    q         $nag --exit
    Escape    $nag --exit

    Return    $nag --confirm

    Tab       $nag --select prev
    Shift+Tab $nag --select next

    Left      $nag --select next
    Right     $nag --select prev

    Up        $nag --select next
    Down      $nag --select prev
  }
}

# exec swayidle -w \
# 	timeout 300 'swaylock' \
# 	timeout 305 'swaymsg "output * dpms off"' \
# 	resume 'swaymsg "output * dpms on"'

# exec wl-paste -t text --watch clipman store

# set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
# exec mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ 
bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- 
bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle 

bindsym XF86MonBrightnessUp exec sudo light -A 5  
bindsym XF86MonBrightnessDown exec sudo light -U 5  


bar {
    swaybar_command waybar
}

# include system wide rest of the configuration
include /etc/sway/config.d/*

